{
  "openapi": "3.0.0",
  "paths": {
    "/company": {
      "get": {
        "operationId": "getmanyCompany",
        "summary": "Get Many Companies",
        "description": "Get Many Companies",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Company fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Companies. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Companies. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Companies by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "company"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/company/{id}": {
      "get": {
        "operationId": "getCompany",
        "summary": "Get One Company",
        "description": "Get One Company",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Company fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "company"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employee": {
      "get": {
        "operationId": "getmanyEmployee",
        "summary": "Get Many Employees",
        "description": "Get Many Employees",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employee fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "title",
                  "active",
                  "companyId",
                  "officeId",
                  "managerEmployeeId",
                  "departmentId",
                  "costCenterId",
                  "employmentId",
                  "employmentTypeId",
                  "employmentCountry",
                  "compensationId",
                  "userId",
                  "userName",
                  "division",
                  "organization",
                  "employeeNumber",
                  "workEmail",
                  "workPhone",
                  "workPhoneSanitized",
                  "hireDate",
                  "endDate",
                  "hasOccupationalPension",
                  "privateEmail",
                  "firstName",
                  "lastName",
                  "ssn",
                  "privatePhone",
                  "privatePhoneSanitized",
                  "birthDate",
                  "age",
                  "nationality",
                  "gender",
                  "pronoun",
                  "created",
                  "updated"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Employee resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "office",
                  "costCenter",
                  "child",
                  "department",
                  "emergencyContact",
                  "employment",
                  "employmentType",
                  "compensation",
                  "managerEmployee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "title": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "officeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "managerEmployeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "departmentId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "costCenterId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employmentId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employmentTypeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employmentCountry": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "compensationId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "userId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "userName": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "division": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "organization": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeNumber": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "workEmail": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "workPhone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "workPhoneSanitized": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "hireDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "hasOccupationalPension": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "privateEmail": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "firstName": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "lastName": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "ssn": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "privatePhone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "privatePhoneSanitized": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "birthDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "age": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "nationality": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "gender": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "pronoun": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "updated": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Employees. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Employees. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Employees by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "active": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "officeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "managerEmployeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "departmentId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "costCenterId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employmentId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employmentTypeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employmentCountry": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "compensationId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "userId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "userName": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "division": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "organization": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeNumber": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "workEmail": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "workPhone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "workPhoneSanitized": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "hireDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "endDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "hasOccupationalPension": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "privateEmail": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "firstName": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "lastName": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "ssn": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "privatePhone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "privatePhoneSanitized": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "birthDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "age": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "nationality": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "pronoun": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "created": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "updated": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createEmployee",
        "summary": "Create One Employee",
        "description": "Create One Employee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employee/{id}": {
      "get": {
        "operationId": "getEmployee",
        "summary": "Get One Employee",
        "description": "Get One Employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employee fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "title",
                  "active",
                  "companyId",
                  "officeId",
                  "managerEmployeeId",
                  "departmentId",
                  "costCenterId",
                  "employmentId",
                  "employmentTypeId",
                  "employmentCountry",
                  "compensationId",
                  "userId",
                  "userName",
                  "division",
                  "organization",
                  "employeeNumber",
                  "workEmail",
                  "workPhone",
                  "workPhoneSanitized",
                  "hireDate",
                  "endDate",
                  "hasOccupationalPension",
                  "privateEmail",
                  "firstName",
                  "lastName",
                  "ssn",
                  "privatePhone",
                  "privatePhoneSanitized",
                  "birthDate",
                  "age",
                  "nationality",
                  "gender",
                  "pronoun",
                  "created",
                  "updated"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Employee resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "office",
                  "costCenter",
                  "child",
                  "department",
                  "emergencyContact",
                  "employment",
                  "employmentType",
                  "compensation",
                  "managerEmployee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateEmployee",
        "summary": "Update One Employee",
        "description": "Update One Employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceEmployee",
        "summary": "Replace One Employee",
        "description": "Replace One Employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteEmployee",
        "summary": "Delete One Employee",
        "description": "Delete One Employee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employee"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/department": {
      "get": {
        "operationId": "getmanyDepartment",
        "summary": "Get Many Departments",
        "description": "Get Many Departments",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Department fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "costCenterId",
                  "effectiveCostCenterId",
                  "parentId"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Department resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "costCenter",
                  "effectiveCostCenter"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "costCenterId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "effectiveCostCenterId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "parentId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Departments. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Departments. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Departments by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "costCenterId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "effectiveCostCenterId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "parentId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createDepartment",
        "summary": "Create One Department",
        "description": "Create One Department",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/department/{id}": {
      "get": {
        "operationId": "getDepartment",
        "summary": "Get One Department",
        "description": "Get One Department",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Department fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "costCenterId",
                  "effectiveCostCenterId",
                  "parentId"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Department resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "costCenter",
                  "effectiveCostCenter"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateDepartment",
        "summary": "Update One Department",
        "description": "Update One Department",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceDepartment",
        "summary": "Replace One Department",
        "description": "Replace One Department",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteDepartment",
        "summary": "Delete One Department",
        "description": "Delete One Department",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "department"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/office": {
      "get": {
        "operationId": "getmanyOffice",
        "summary": "Get Many Offices",
        "description": "Get Many Offices",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Office fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "phone",
                  "email",
                  "timezone"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "phone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "timezone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Offices. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Offices. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Offices by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "phone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "email": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "timezone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createOffice",
        "summary": "Create One Office",
        "description": "Create One Office",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfficeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/office/{id}": {
      "get": {
        "operationId": "getOffice",
        "summary": "Get One Office",
        "description": "Get One Office",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Office fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "phone",
                  "email",
                  "timezone"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOffice",
        "summary": "Update One Office",
        "description": "Update One Office",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfficeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceOffice",
        "summary": "Replace One Office",
        "description": "Replace One Office",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfficeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfficeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOffice",
        "summary": "Delete One Office",
        "description": "Delete One Office",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "office"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/compensation": {
      "get": {
        "operationId": "getmanyCompensation",
        "summary": "Get Many Compensations",
        "description": "Get Many Compensations",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Compensation fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "companyId",
                  "amount",
                  "effectiveDate",
                  "baseAmount",
                  "exchangeRate",
                  "currency",
                  "payoutDay",
                  "payoutPeriod",
                  "payoutFrequency",
                  "paidOvertime",
                  "note"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "amount": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "effectiveDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "baseAmount": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "exchangeRate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "currency": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "payoutDay": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "payoutPeriod": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "payoutFrequency": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "paidOvertime": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "note": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Compensations. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Compensations. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Compensations by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "amount": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "effectiveDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "baseAmount": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "exchangeRate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "payoutDay": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "payoutPeriod": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "payoutFrequency": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "paidOvertime": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "note": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompensationsGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createCompensation",
        "summary": "Create One Compensation",
        "description": "Create One Compensation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompensationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompensationResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/compensation/{id}": {
      "get": {
        "operationId": "getCompensation",
        "summary": "Get One Compensation",
        "description": "Get One Compensation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Compensation fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "companyId",
                  "amount",
                  "effectiveDate",
                  "baseAmount",
                  "exchangeRate",
                  "currency",
                  "payoutDay",
                  "payoutPeriod",
                  "payoutFrequency",
                  "paidOvertime",
                  "note"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompensationGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCompensation",
        "summary": "Update One Compensation",
        "description": "Update One Compensation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompensationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompensationResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceCompensation",
        "summary": "Replace One Compensation",
        "description": "Replace One Compensation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompensationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompensationResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCompensation",
        "summary": "Delete One Compensation",
        "description": "Delete One Compensation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "compensation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employment": {
      "get": {
        "operationId": "getmanyEmployment",
        "summary": "Get Many Employments",
        "description": "Get Many Employments",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employment fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "employeeId",
                  "typeId",
                  "startDate",
                  "endDate",
                  "effectiveEndDate",
                  "terminated",
                  "rate",
                  "note",
                  "country"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Employment resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "typeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "effectiveEndDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "terminated": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "rate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "note": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "country": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Employments. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Employments. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Employments by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "typeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "endDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "effectiveEndDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "terminated": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "rate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "note": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "country": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentsGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createEmployment",
        "summary": "Create One Employment",
        "description": "Create One Employment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmploymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employment/{id}": {
      "get": {
        "operationId": "getEmployment",
        "summary": "Get One Employment",
        "description": "Get One Employment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employment fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "employeeId",
                  "typeId",
                  "startDate",
                  "endDate",
                  "effectiveEndDate",
                  "terminated",
                  "rate",
                  "note",
                  "country"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Employment resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateEmployment",
        "summary": "Update One Employment",
        "description": "Update One Employment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmploymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceEmployment",
        "summary": "Replace One Employment",
        "description": "Replace One Employment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmploymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteEmployment",
        "summary": "Delete One Employment",
        "description": "Delete One Employment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employment-type": {
      "get": {
        "operationId": "getmanyEmploymentType",
        "summary": "Get Many Employment Types",
        "description": "Get Many Employment Types",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employment Type fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "vacation",
                  "country",
                  "maxMonths"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "vacation": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "country": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "maxMonths": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Employment Types. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Employment Types. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Employment Types by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "vacation": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "country": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "maxMonths": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentTypesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createEmploymentType",
        "summary": "Create One Employment Type",
        "description": "Create One Employment Type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmploymentTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/employment-type/{id}": {
      "get": {
        "operationId": "getEmploymentType",
        "summary": "Get One Employment Type",
        "description": "Get One Employment Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Employment Type fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "name",
                  "vacation",
                  "country",
                  "maxMonths"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentTypeGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateEmploymentType",
        "summary": "Update One Employment Type",
        "description": "Update One Employment Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmploymentTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceEmploymentType",
        "summary": "Replace One Employment Type",
        "description": "Replace One Employment Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmploymentTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteEmploymentType",
        "summary": "Delete One Employment Type",
        "description": "Delete One Employment Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "employment-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cost-center": {
      "get": {
        "operationId": "getmanyCostCenter",
        "summary": "Get Many Cost Centers",
        "description": "Get Many Cost Centers",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Cost Center fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "code",
                  "name"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "code": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Cost Centers. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Cost Centers. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Cost Centers by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCentersGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createCostCenter",
        "summary": "Create One Cost Center",
        "description": "Create One Cost Center",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCostCenterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cost-center/{id}": {
      "get": {
        "operationId": "getCostCenter",
        "summary": "Get One Cost Center",
        "description": "Get One Cost Center",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Cost Center fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "code",
                  "name"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateCostCenter",
        "summary": "Update One Cost Center",
        "description": "Update One Cost Center",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCostCenterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceCostCenter",
        "summary": "Replace One Cost Center",
        "description": "Replace One Cost Center",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCostCenterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCostCenter",
        "summary": "Delete One Cost Center",
        "description": "Delete One Cost Center",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "cost-center"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave": {
      "get": {
        "operationId": "getmanyLeave",
        "summary": "Get Many Leaves",
        "description": "Get Many Leaves",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Leave fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "typeId",
                  "status",
                  "duration",
                  "startDate",
                  "endDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Leave resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "typeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "duration": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Leaves. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Leaves. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Leaves by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "typeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "duration": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "endDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeavesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createLeave",
        "summary": "Create One Leave",
        "description": "Create One Leave",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeaveRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave/{id}": {
      "get": {
        "operationId": "getLeave",
        "summary": "Get One Leave",
        "description": "Get One Leave",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Leave fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "typeId",
                  "status",
                  "duration",
                  "startDate",
                  "endDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Leave resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateLeave",
        "summary": "Update One Leave",
        "description": "Update One Leave",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceLeave",
        "summary": "Replace One Leave",
        "description": "Replace One Leave",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteLeave",
        "summary": "Delete One Leave",
        "description": "Delete One Leave",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave-type": {
      "get": {
        "operationId": "getmanyLeaveType",
        "summary": "Get Many LeaveTypes",
        "description": "Get Many LeaveTypes",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select LeaveType fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "kind",
                  "minimumDuration",
                  "deductible",
                  "paid",
                  "disabled"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "kind": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "minimumDuration": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "deductible": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "paid": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "disabled": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received LeaveTypes. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received LeaveTypes. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received LeaveTypes by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "minimumDuration": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "deductible": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "paid": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "disabled": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTypesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createLeaveType",
        "summary": "Create One LeaveType",
        "description": "Create One LeaveType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeaveTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave-type/{id}": {
      "get": {
        "operationId": "getLeaveType",
        "summary": "Get One LeaveType",
        "description": "Get One LeaveType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select LeaveType fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "kind",
                  "minimumDuration",
                  "deductible",
                  "paid",
                  "disabled"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTypeGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateLeaveType",
        "summary": "Update One LeaveType",
        "description": "Update One LeaveType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeaveTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceLeaveType",
        "summary": "Replace One LeaveType",
        "description": "Replace One LeaveType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeaveTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTypeResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteLeaveType",
        "summary": "Delete One LeaveType",
        "description": "Delete One LeaveType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave-transaction": {
      "get": {
        "operationId": "getmanyLeaveTransaction",
        "summary": "Get Many LeaveTransactions",
        "description": "Get Many LeaveTransactions",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select LeaveTransaction fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "leaveTypeId",
                  "employeeId",
                  "childId",
                  "description",
                  "date",
                  "hours",
                  "extent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related LeaveTransaction resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "child",
                  "leaveType",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "leaveTypeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "childId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "hours": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "extent": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received LeaveTransactions. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received LeaveTransactions. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received LeaveTransactions by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "leaveTypeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "childId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "date": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "hours": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "extent": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTransactionsGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-transaction"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/leave-transaction/{id}": {
      "get": {
        "operationId": "getLeaveTransaction",
        "summary": "Get One LeaveTransaction",
        "description": "Get One LeaveTransaction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select LeaveTransaction fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "leaveTypeId",
                  "employeeId",
                  "childId",
                  "description",
                  "date",
                  "hours",
                  "extent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related LeaveTransaction resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "child",
                  "leaveType",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTransactionGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "leave-transaction"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/child": {
      "get": {
        "operationId": "getmanyChild",
        "summary": "Get Many Children",
        "description": "Get Many Children",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Child fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "name",
                  "birthdate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "birthdate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Children. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Children. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Children by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "birthdate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildrenGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createChild",
        "summary": "Create One Child",
        "description": "Create One Child",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChildRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/child/{id}": {
      "get": {
        "operationId": "getChild",
        "summary": "Get One Child",
        "description": "Get One Child",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Child fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "employeeId",
                  "name",
                  "birthdate"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateChild",
        "summary": "Update One Child",
        "description": "Update One Child",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceChild",
        "summary": "Replace One Child",
        "description": "Replace One Child",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteChild",
        "summary": "Delete One Child",
        "description": "Delete One Child",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "child"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet": {
      "get": {
        "operationId": "getmanyTimesheet",
        "summary": "Get Many Timesheets",
        "description": "Get Many Timesheets",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Timesheet fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "status",
                  "startDate",
                  "endDate",
                  "localCutOffDate",
                  "utcCutOffDate",
                  "approvalDeadlineDate",
                  "interval",
                  "note",
                  "approverEmployeeId",
                  "employeeId",
                  "submitDate",
                  "approvalDate",
                  "rejectedDate",
                  "timezone"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Timesheet resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "approverEmployee",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "localCutOffDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "utcCutOffDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "approvalDeadlineDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "interval": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "note": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "approverEmployeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "submitDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "approvalDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "rejectedDate": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "timezone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received Timesheets. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received Timesheets. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received Timesheets by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "endDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "localCutOffDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "utcCutOffDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "approvalDeadlineDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "interval": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "note": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "approverEmployeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "submitDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "approvalDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "rejectedDate": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "timezone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetsGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet/{id}": {
      "get": {
        "operationId": "getTimesheet",
        "summary": "Get One Timesheet",
        "description": "Get One Timesheet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select Timesheet fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "status",
                  "startDate",
                  "endDate",
                  "localCutOffDate",
                  "utcCutOffDate",
                  "approvalDeadlineDate",
                  "interval",
                  "note",
                  "approverEmployeeId",
                  "employeeId",
                  "submitDate",
                  "approvalDate",
                  "rejectedDate",
                  "timezone"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related Timesheet resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "approverEmployee",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet-entry": {
      "get": {
        "operationId": "getmanyTimesheetEntry",
        "summary": "Get Many TimesheetEntries",
        "description": "Get Many TimesheetEntries",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select TimesheetEntry fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "timesheetId",
                  "typeId",
                  "employeeId",
                  "date",
                  "status",
                  "minutes",
                  "note"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related TimesheetEntry resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "employee",
                  "timesheet",
                  "type"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "timesheetId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "typeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "minutes": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "note": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received TimesheetEntries. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received TimesheetEntries. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received TimesheetEntries by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "timesheetId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "typeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "date": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "minutes": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "note": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntriesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createTimesheetEntry",
        "summary": "Create One TimesheetEntry",
        "description": "Create One TimesheetEntry",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTimesheetEntryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet-entry/{id}": {
      "get": {
        "operationId": "getTimesheetEntry",
        "summary": "Get One TimesheetEntry",
        "description": "Get One TimesheetEntry",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select TimesheetEntry fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "timesheetId",
                  "typeId",
                  "employeeId",
                  "date",
                  "status",
                  "minutes",
                  "note"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related TimesheetEntry resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "employee",
                  "timesheet",
                  "type"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateTimesheetEntry",
        "summary": "Update One TimesheetEntry",
        "description": "Update One TimesheetEntry",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTimesheetEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceTimesheetEntry",
        "summary": "Replace One TimesheetEntry",
        "description": "Replace One TimesheetEntry",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTimesheetEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteTimesheetEntry",
        "summary": "Delete One TimesheetEntry",
        "description": "Delete One TimesheetEntry",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet-entry-type": {
      "get": {
        "operationId": "getmanyTimesheetEntryType",
        "summary": "Get Many TimesheetEntryTypes",
        "description": "Get Many TimesheetEntryTypes",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select TimesheetEntryType fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "kind"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "kind": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received TimesheetEntryTypes. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received TimesheetEntryTypes. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received TimesheetEntryTypes by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryTypesGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/timesheet-entry-type/{id}": {
      "get": {
        "operationId": "getTimesheetEntryType",
        "summary": "Get One TimesheetEntryType",
        "description": "Get One TimesheetEntryType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select TimesheetEntryType fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "kind"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetEntryTypeGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "timesheet-entry-type"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/work-week": {
      "get": {
        "operationId": "getmanyWorkWeek",
        "summary": "Get Many WorkWeeks",
        "description": "Get Many WorkWeeks",
        "parameters": [
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select WorkWeek fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "officeId",
                  "employeeId",
                  "effectiveFrom",
                  "timezone",
                  "duration"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related WorkWeek resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "office",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Filters conditions per field. (e.g. `filters[id][$eq]=507f1f77bcf86cd799439011`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "companyId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "officeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "employeeId": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "effectiveFrom": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "timezone": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                },
                "duration": {
                  "type": "object",
                  "properties": {
                    "$eq": {
                      "type": "string"
                    },
                    "$neq": {
                      "type": "string"
                    },
                    "$gt": {
                      "type": "string"
                    },
                    "$lt": {
                      "type": "string"
                    },
                    "$gte": {
                      "type": "string"
                    },
                    "$lte": {
                      "type": "string"
                    },
                    "$in": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$between": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$all": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of received WorkWeeks. (e.g. `limit=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset amount of received WorkWeeks. (e.g. `offset=20`)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort received WorkWeeks by field. (e.g. `sort[id]=asc`)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "companyId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "officeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "employeeId": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "effectiveFrom": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "timezone": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "duration": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkWeeksGetManyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createWorkWeek",
        "summary": "Create One WorkWeek",
        "description": "Create One WorkWeek",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkWeekRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkWeekResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/work-week/{id}": {
      "get": {
        "operationId": "getWorkWeek",
        "summary": "Get One WorkWeek",
        "description": "Get One WorkWeek",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "required": false,
            "in": "query",
            "description": "Select WorkWeek fields, comma-separated. (e.g. `select=id,firstName,lastName,workEmail`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "companyId",
                  "officeId",
                  "employeeId",
                  "effectiveFrom",
                  "timezone",
                  "duration"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Select related WorkWeek resources, comma-separated. (e.g. `relations=office,department`)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "office",
                  "employee"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkWeekGetOneResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateWorkWeek",
        "summary": "Update One WorkWeek",
        "description": "Update One WorkWeek",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkWeekRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkWeekResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "replaceWorkWeek",
        "summary": "Replace One WorkWeek",
        "description": "Replace One WorkWeek",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkWeekRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkWeekResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteWorkWeek",
        "summary": "Delete One WorkWeek",
        "description": "Delete One WorkWeek",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "507f1f77bcf86cd799439011",
            "description": "Resource Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponseMapped"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "work-week"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "AlexisHR API",
    "description": "<h1 id=\"introduction\">Introduction</h1>\n<p>\n  AlexisHR API is currently in preview. This means that small, backward\n  incompatible changes might be introduced while in preview. The changes will be\n  documented and communicated.\n  <a\n    href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"\n    target=\"_blank\"\n    ><button>Subscribe to updates</button></a\n  >\n</p>\n\n<h1 id=\"authentication\">Authentication</h1>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">\n<code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\\n  -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>\n</pre>\n<p>\n  Authenticate your account when using the API by including your secret Access\n  Token in the request.\n  <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a\n  >.\n</p>\n<p>\n  Authentication is performed by passing the Access Token in the Authorization\n  header.\n</p>\n<hr />\n\n<h1 id=\"structure\">Structure</h1>\n<p>\n  You will find the structure of the API to be highly uniform and consistent.\n  Typically every resource can be accessed via a top level endpoint, such as\n  <code>/v1/employee</code>. For every such resource, you can perform some of\n  the following operations:\n</p>\n<h2>Operations</h2>\n<table>\n  <tr>\n    <td>GET /v1/:resource</td>\n    <td>List all objects of this type</td>\n  </tr>\n  <tr>\n    <td>GET /v1/:resource/:id</td>\n    <td>Retrieve a resource by id</td>\n  </tr>\n  <tr>\n    <td>POST /v1/:resource</td>\n    <td>Create a resource of this type</td>\n  </tr>\n  <tr>\n    <td>PATCH /v1/:resource/:id</td>\n    <td>Update the resource by id</td>\n  </tr>\n  <tr>\n    <td>DELETE /v1/:resource/:id</td>\n    <td>Delete the resource by id</td>\n  </tr>\n</table>\n<hr />\n\n<h1 id=\"roles\">Roles</h1>\n<p>The Access Tokens will have owner permission on the account</p>\n<hr />\n\n<h1 id=\"filters\">Filters</h1>\n<p>\n  Some of the list endpoints allow to filter results by certain conditions.\n  Refer to specific resources to find out what criteria are allowed. Below is a\n  list of the different conditions.\n</p>\n\n<h4 id=\"eq\"><code>$eq</code></h4>\n<p>Find all results matching the attribute value specified.</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>\n</div>\n<p>Can also be simplified like this.</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>\n</div>\n\n<h4 id=\"neq\"><code>$neq</code></h4>\n<p>Find all results not matching the attribute value specified.</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>\n</div>\n\n<h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>\n<p>\n  Find all results where the value is more (<code>$gt</code>) or more and equal\n  (<code>$gte</code>) to a given value.\n</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>\n</div>\n<hr />\n\n<h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>\n<p>\n  Find all results where the value is less (<code>$lt</code>) or less and equal\n  (<code>$lte</code>) to a given value.\n</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>\n</div>\n<hr />\n\n<h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>\n<p>\n  Find all results matching (<code>$in</code>) or not matching\n  (<code>$nin</code>) any of the attribute values specified.\n</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>\n</div>\n<hr />\n\n<h4 id=\"between\"><code>$between</code></h4>\n<p>Find all results between two values specified.</p>\n<div>\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>\n</div>\n<hr />\n\n<h1 id=\"versioning\">Versioning</h1>\n<p>\n  Each version of the API is guaranteed to be compatible with the resources of\n  the same version. When we make breaking changes to the API a new version will\n  be published\n</p>\n<hr />\n\n<h1 id=\"changelog\">Changelog</h1>\n<h3>2021-03-15</h3>\n<p>First draft was published</p>\n<hr />\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "v1-preview",
    "contact": {
      "name": "AlexisHR Support",
      "url": "",
      "email": "support@alexishr.com"
    },
    "termsOfService": "https://alexishr.com/terms-of-service",
    "license": {
      "name": "EUL",
      "url": "https://alexishr.com/public-api-license"
    }
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.alexishr.com/v1",
      "description": "production"
    },
    {
      "url": "https://api.sandbox.alexishr.com/v1",
      "description": "sandbox"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          },
          "error": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "ForbiddenResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 403
          },
          "message": {
            "type": "string",
            "example": "Forbidden"
          },
          "error": {
            "type": "string",
            "example": "Forbidden"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          },
          "error": {
            "type": "string",
            "example": "Internal server error"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orgNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "backgroundUrl": {
            "type": "string"
          },
          "offboardDate": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "EmptyResponse": {
        "type": "object",
        "properties": {}
      },
      "CompaniesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "CompanyGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Not Found"
          },
          "error": {
            "type": "string",
            "example": "Not Found"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "EmployeeTaxResponse": {
        "type": "object",
        "properties": {
          "table": {
            "type": "number"
          },
          "column": {
            "type": "number"
          }
        }
      },
      "BankAccountResponse": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "string"
          },
          "clearing": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "PointResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "coordinates": {
            "example": [
              123,
              321
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "coordinates"
        ]
      },
      "HomeAddressResponse": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/PointResponse"
          }
        }
      },
      "CustomFieldsResponse": {
        "type": "object",
        "properties": {}
      },
      "EmployeeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "officeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "managerEmployeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "departmentId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "costCenterId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employmentId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employmentTypeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employmentCountry": {
            "type": "string",
            "example": "SE"
          },
          "compensationId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "userId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "userName": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "division": {
            "type": "string",
            "example": "Division 1"
          },
          "organization": {
            "type": "string",
            "example": "Organization 1"
          },
          "tax": {
            "$ref": "#/components/schemas/EmployeeTaxResponse"
          },
          "employeeNumber": {
            "type": "string"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "workPhoneSanitized": {
            "type": "string"
          },
          "hireDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "hasOccupationalPension": {
            "type": "boolean"
          },
          "privateEmail": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "ssn": {
            "type": "string"
          },
          "privatePhone": {
            "type": "string"
          },
          "privatePhoneSanitized": {
            "type": "string"
          },
          "birthDate": {
            "format": "date-time",
            "type": "string"
          },
          "age": {
            "type": "number"
          },
          "avatarUrl": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "pronoun": {
            "type": "string"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccountResponse"
          },
          "homeAddress": {
            "$ref": "#/components/schemas/HomeAddressResponse"
          },
          "custom": {
            "example": {
              "fieldExample": "example value",
              "numberFieldExample": 50,
              "booleanFieldExample": true
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldsResponse"
              }
            ]
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "active",
          "companyId",
          "employeeNumber",
          "created",
          "updated"
        ]
      },
      "OfficeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "example": "Africa/Abidjan"
          }
        },
        "required": [
          "id",
          "companyId",
          "name",
          "phone",
          "email",
          "timezone"
        ]
      },
      "CostCenterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "companyId",
          "code"
        ]
      },
      "ChildResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "employeeId",
          "name",
          "birthdate"
        ]
      },
      "DepartmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "costCenterId": {
            "type": "string"
          },
          "effectiveCostCenterId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "companyId",
          "name"
        ]
      },
      "EmergencyContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "relationship": {
            "type": "string",
            "example": "Father"
          },
          "phone": {
            "type": "string",
            "example": "+4612345678"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          }
        },
        "required": [
          "id",
          "employeeId",
          "fullName",
          "relationship",
          "phone",
          "email"
        ]
      },
      "EmploymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "effectiveEndDate": {
            "format": "date-time",
            "type": "string"
          },
          "terminated": {
            "type": "boolean"
          },
          "rate": {
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        },
        "required": [
          "id",
          "companyId",
          "employeeId",
          "typeId",
          "startDate",
          "terminated",
          "rate",
          "country"
        ]
      },
      "EmploymentTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "vacation": {
            "type": "boolean",
            "example": false
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "maxMonths": {
            "type": "number",
            "example": 12
          }
        },
        "required": [
          "id",
          "name",
          "vacation"
        ]
      },
      "CompensationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "amount": {
            "type": "number"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "baseAmount": {
            "type": "number"
          },
          "exchangeRate": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "example": "SEK",
            "enum": [
              "SEK",
              "NOK",
              "DKK",
              "EUR",
              "USD",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTC",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLF",
              "CLP",
              "CNH",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "payoutDay": {
            "type": "number",
            "example": 25
          },
          "payoutPeriod": {
            "type": "string",
            "example": "MONTHLY",
            "enum": [
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "BI_WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "ANNUAL"
            ]
          },
          "payoutFrequency": {
            "type": "string",
            "example": "MONTH",
            "enum": [
              "WEEK",
              "BI_WEEKLY",
              "MONTH"
            ]
          },
          "paidOvertime": {
            "type": "boolean",
            "example": false
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "employeeId",
          "companyId",
          "amount",
          "effectiveDate",
          "baseAmount",
          "exchangeRate",
          "currency",
          "payoutDay",
          "payoutPeriod",
          "payoutFrequency",
          "paidOvertime"
        ]
      },
      "EmployeeGetManyRelationsResponse": {
        "type": "object",
        "properties": {
          "office": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficeResponse"
            }
          },
          "costCenter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterResponse"
            }
          },
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildResponse"
            }
          },
          "department": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentResponse"
            }
          },
          "emergencyContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyContactResponse"
            }
          },
          "employment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentResponse"
            }
          },
          "employmentType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentTypeResponse"
            }
          },
          "compensation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompensationResponse"
            }
          },
          "managerEmployee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "EmployeesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeGetManyRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "EmployeeGetOneRelationsResponse": {
        "type": "object",
        "properties": {
          "office": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficeResponse"
            }
          },
          "costCenter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterResponse"
            }
          },
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildResponse"
            }
          },
          "department": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentResponse"
            }
          },
          "emergencyContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyContactResponse"
            }
          },
          "employment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentResponse"
            }
          },
          "employmentType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentTypeResponse"
            }
          },
          "compensation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompensationResponse"
            }
          },
          "managerEmployee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "EmployeeGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeGetOneRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "EmployeeTaxRequest": {
        "type": "object",
        "properties": {
          "table": {
            "type": "number"
          },
          "column": {
            "type": "number"
          }
        }
      },
      "BankAccountRequest": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "string"
          },
          "clearing": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "HomeAddressRequest": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "CustomFieldsRequest": {
        "type": "object",
        "properties": {}
      },
      "CreateEmployeeRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "officeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "managerEmployeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "departmentId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "costCenterId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "userName": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "division": {
            "type": "string",
            "example": "Division 1"
          },
          "organization": {
            "type": "string",
            "example": "Organization 1"
          },
          "employeeNumber": {
            "type": "string",
            "example": 1
          },
          "tax": {
            "$ref": "#/components/schemas/EmployeeTaxRequest"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "hasOccupationalPension": {
            "type": "boolean"
          },
          "privateEmail": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "ssn": {
            "type": "string"
          },
          "privatePhone": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "pronoun": {
            "type": "string"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccountRequest"
          },
          "homeAddress": {
            "$ref": "#/components/schemas/HomeAddressRequest"
          },
          "custom": {
            "example": {
              "fieldExample": "example value",
              "numberFieldExample": 50,
              "booleanFieldExample": true
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldsRequest"
              }
            ]
          }
        }
      },
      "EmployeeResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployeeResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateEmployeeRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "officeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "managerEmployeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "departmentId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "costCenterId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "userName": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "division": {
            "type": "string",
            "example": "Division 1"
          },
          "organization": {
            "type": "string",
            "example": "Organization 1"
          },
          "employeeNumber": {
            "type": "string",
            "example": 1
          },
          "tax": {
            "$ref": "#/components/schemas/EmployeeTaxRequest"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "hasOccupationalPension": {
            "type": "boolean"
          },
          "privateEmail": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "ssn": {
            "type": "string"
          },
          "privatePhone": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "pronoun": {
            "type": "string"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccountRequest"
          },
          "homeAddress": {
            "$ref": "#/components/schemas/HomeAddressRequest"
          },
          "custom": {
            "example": {
              "fieldExample": "example value",
              "numberFieldExample": 50,
              "booleanFieldExample": true
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomFieldsRequest"
              }
            ]
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "EmptyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "DepartmentRelationsResponse": {
        "type": "object",
        "properties": {
          "costCenter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterResponse"
            }
          },
          "effectiveCostCenter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterResponse"
            }
          }
        }
      },
      "DepartmentsGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/DepartmentRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "DepartmentGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/DepartmentResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/DepartmentRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateDepartmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "costCenterId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "DepartmentResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/DepartmentResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateDepartmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "costCenterId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OfficesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficeResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "OfficeGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfficeResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateOfficeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "example": "Africa/Abidjan"
          }
        },
        "required": [
          "name",
          "phone",
          "email",
          "timezone"
        ]
      },
      "OfficeResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfficeResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateOfficeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "example": "Africa/Abidjan"
          }
        }
      },
      "CompensationsGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompensationResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "CompensationGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/CompensationResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateCompensationRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "amount": {
            "type": "number"
          },
          "effectiveDate": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "example": "SEK",
            "enum": [
              "SEK",
              "NOK",
              "DKK",
              "EUR",
              "USD",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTC",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLF",
              "CLP",
              "CNH",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "payoutDay": {
            "type": "number",
            "example": 25
          },
          "payoutPeriod": {
            "type": "string",
            "example": "MONTHLY",
            "enum": [
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "BI_WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "ANNUAL"
            ]
          },
          "payoutFrequency": {
            "type": "string",
            "example": "MONTH",
            "enum": [
              "WEEK",
              "BI_WEEKLY",
              "MONTH"
            ]
          },
          "paidOvertime": {
            "type": "boolean",
            "example": false
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "employeeId",
          "amount",
          "effectiveDate",
          "currency",
          "payoutDay",
          "payoutPeriod",
          "payoutFrequency",
          "paidOvertime"
        ]
      },
      "CompensationResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/CompensationResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateCompensationRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "example": "SEK",
            "enum": [
              "SEK",
              "NOK",
              "DKK",
              "EUR",
              "USD",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTC",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLF",
              "CLP",
              "CNH",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "payoutDay": {
            "type": "number",
            "example": 25
          },
          "payoutPeriod": {
            "type": "string",
            "example": "MONTHLY",
            "enum": [
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "BI_WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "ANNUAL"
            ]
          },
          "payoutFrequency": {
            "type": "string",
            "example": "MONTH",
            "enum": [
              "WEEK",
              "BI_WEEKLY",
              "MONTH"
            ]
          },
          "paidOvertime": {
            "type": "boolean",
            "example": false
          },
          "note": {
            "type": "string"
          }
        }
      },
      "EmploymentRelationsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentTypeResponse"
            }
          },
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "EmploymentsGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "EmploymentGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateEmploymentRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "effectiveEndDate": {
            "format": "date-time",
            "type": "string"
          },
          "terminated": {
            "type": "boolean"
          },
          "rate": {
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        },
        "required": [
          "employeeId",
          "typeId",
          "startDate",
          "terminated",
          "rate",
          "country"
        ]
      },
      "EmploymentResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateEmploymentRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "effectiveEndDate": {
            "format": "date-time",
            "type": "string"
          },
          "terminated": {
            "type": "boolean"
          },
          "rate": {
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        }
      },
      "EmploymentTypesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentTypeResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "EmploymentTypeGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentTypeResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateEmploymentTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "vacation": {
            "type": "boolean",
            "example": false
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "maxMonths": {
            "type": "number",
            "example": 12
          }
        },
        "required": [
          "name",
          "vacation",
          "country"
        ]
      },
      "EmploymentTypeResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentTypeResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateEmploymentTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "vacation": {
            "type": "boolean",
            "example": false
          },
          "country": {
            "type": "string",
            "example": "SE",
            "enum": [
              "SE",
              "NO",
              "DK",
              "FI",
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CY",
              "CZ",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "AN",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "SH",
              "KN",
              "LC",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "CS",
              "SC",
              "SL",
              "SG",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "maxMonths": {
            "type": "number",
            "example": 12
          }
        },
        "required": [
          "country"
        ]
      },
      "CostCentersGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "CostCenterGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/CostCenterResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateCostCenterRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "CostCenterResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/CostCenterResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateCostCenterRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LeaveResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "enum": [
              "PENDING",
              "DENIED",
              "CANCELLED",
              "APPROVED",
              "CONFIRMED"
            ]
          },
          "duration": {
            "type": "string",
            "example": "minutes",
            "enum": [
              "minutes",
              "half_day",
              "one_day",
              "longer"
            ]
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "employeeId",
          "typeId",
          "status",
          "duration",
          "startDate",
          "endDate"
        ]
      },
      "LeaveTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "example": "SICK_LEAVE",
            "enum": [
              "SICK_LEAVE",
              "PARENTAL_LEAVE",
              "VACATION",
              "OFF_DUTY",
              "CHILDCARE"
            ]
          },
          "minimumDuration": {
            "type": "string",
            "example": "DAY",
            "enum": [
              "DAY",
              "HALF_DAY",
              "HOUR",
              "MINUTE"
            ]
          },
          "deductible": {
            "type": "boolean"
          },
          "paid": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "kind",
          "minimumDuration",
          "deductible",
          "paid",
          "disabled"
        ]
      },
      "LeaveRelationsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTypeResponse"
            }
          },
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "LeavesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "LeaveGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateLeaveRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "childId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "duration": {
            "type": "string",
            "example": "minutes",
            "enum": [
              "minutes",
              "half_day",
              "one_day",
              "longer"
            ]
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "extent": {
            "type": "number",
            "example": 50
          },
          "morning": {
            "type": "object"
          },
          "afternoon": {
            "type": "object"
          }
        },
        "required": [
          "employeeId",
          "typeId",
          "duration",
          "startDate",
          "endDate"
        ]
      },
      "LeaveResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateLeaveRequest": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "duration": {
            "type": "string",
            "example": "minutes",
            "enum": [
              "minutes",
              "half_day",
              "one_day",
              "longer"
            ]
          },
          "description": {
            "type": "string",
            "example": "Description"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "extent": {
            "type": "number",
            "example": 50
          },
          "morning": {
            "type": "boolean"
          },
          "afternoon": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "approvalNote": {
            "type": "string"
          }
        },
        "required": [
          "extent"
        ]
      },
      "LeaveTypesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTypeResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "LeaveTypeGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveTypeResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateLeaveTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "example": "SICK_LEAVE"
          },
          "minimumDuration": {
            "type": "string",
            "example": "DAY"
          },
          "deductible": {
            "type": "boolean"
          },
          "paid": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "LeaveTypeResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveTypeResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateLeaveTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "example": "SICK_LEAVE"
          },
          "minimumDuration": {
            "type": "string",
            "example": "DAY"
          },
          "deductible": {
            "type": "boolean"
          },
          "paid": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "LeaveTransactionParentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "Leave",
            "enum": [
              "Leave",
              "TimesheetEntry"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "LeaveTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/LeaveTransactionParentResponse"
          },
          "status": {
            "type": "string",
            "example": "APPROVED",
            "enum": [
              "APPROVED",
              "CONFIRMED"
            ]
          },
          "leaveTypeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "childId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "hours": {
            "type": "number"
          },
          "extent": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "parent",
          "status",
          "leaveTypeId",
          "employeeId",
          "childId",
          "description",
          "date",
          "hours",
          "extent"
        ]
      },
      "LeaveTransactionRelationsResponse": {
        "type": "object",
        "properties": {
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildResponse"
            }
          },
          "leaveType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTypeResponse"
            }
          },
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "LeaveTransactionsGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTransactionResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveTransactionRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "LeaveTransactionGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveTransactionResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/LeaveTransactionRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "ChildrenGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "ChildGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChildResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateChildRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "employeeId",
          "name",
          "birthdate"
        ]
      },
      "ChildResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChildResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateChildRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "birthdate"
        ]
      },
      "TimesheetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "status": {
            "type": "string",
            "example": "APPROVED",
            "enum": [
              "PENDING",
              "SUBMITTED",
              "APPROVED",
              "REJECTED"
            ]
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "localCutOffDate": {
            "format": "date-time",
            "type": "string"
          },
          "utcCutOffDate": {
            "format": "date-time",
            "type": "string"
          },
          "approvalDeadlineDate": {
            "format": "date-time",
            "type": "string"
          },
          "interval": {
            "type": "string",
            "example": "MONTHLY",
            "enum": [
              "WEEKLY",
              "MONTHLY"
            ]
          },
          "note": {
            "type": "string"
          },
          "approverEmployeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "submitDate": {
            "format": "date-time",
            "type": "string"
          },
          "approvalDate": {
            "format": "date-time",
            "type": "string"
          },
          "rejectedDate": {
            "format": "date-time",
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "startDate",
          "endDate",
          "localCutOffDate",
          "utcCutOffDate",
          "approvalDeadlineDate",
          "interval",
          "approverEmployeeId",
          "employeeId",
          "submitDate",
          "approvalDate",
          "rejectedDate",
          "timezone"
        ]
      },
      "TimesheetRelationsResponse": {
        "type": "object",
        "properties": {
          "approverEmployee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          },
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "TimesheetsGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "TimesheetGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "TimesheetEntryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "timesheetId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "APPROVED",
            "enum": [
              "PENDING",
              "SUBMITTED",
              "APPROVED",
              "REJECTED"
            ]
          },
          "minutes": {
            "type": "number"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "timesheetId",
          "typeId",
          "employeeId",
          "date",
          "status",
          "minutes"
        ]
      },
      "TimesheetEntryTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "example": "HOURLY_WAGE",
            "enum": [
              "HOURLY_WAGE",
              "WORKING_HOURS"
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TimesheetEntryRelationsResponse": {
        "type": "object",
        "properties": {
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          },
          "timesheet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetResponse"
            }
          },
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetEntryTypeResponse"
            }
          }
        }
      },
      "TimesheetEntriesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetEntryResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetEntryRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "TimesheetEntryGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetEntryResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetEntryRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateTimesheetEntryRequest": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "minutes": {
            "type": "number"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "typeId",
          "employeeId",
          "date",
          "minutes"
        ]
      },
      "TimesheetEntryResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetEntryResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateTimesheetEntryRequest": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "minutes": {
            "type": "number"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "TimesheetEntryTypesGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetEntryTypeResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "TimesheetEntryTypeGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetEntryTypeResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmptyResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WorkShiftResponse": {
        "type": "object",
        "properties": {
          "startHour": {
            "type": "number"
          },
          "startMinute": {
            "type": "number"
          },
          "endHour": {
            "type": "number"
          },
          "endMinute": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          }
        },
        "required": [
          "startHour",
          "startMinute",
          "endHour",
          "endMinute",
          "duration"
        ]
      },
      "WorkWeekDayResponse": {
        "type": "object",
        "properties": {
          "working": {
            "type": "boolean"
          },
          "duration": {
            "type": "number"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkShiftResponse"
            }
          }
        },
        "required": [
          "working",
          "duration",
          "shifts"
        ]
      },
      "WorkWeekResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "companyId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "officeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "effectiveFrom": {
            "format": "date-time",
            "type": "string"
          },
          "effectiveTo": {
            "format": "date-time",
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "monday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "tuesday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "wednesday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "thursday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "friday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "saturday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          },
          "sunday": {
            "$ref": "#/components/schemas/WorkWeekDayResponse"
          }
        },
        "required": [
          "id",
          "companyId",
          "effectiveFrom",
          "timezone",
          "duration",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ]
      },
      "WorkWeekRelationsResponse": {
        "type": "object",
        "properties": {
          "office": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficeResponse"
            }
          },
          "employee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            }
          }
        }
      },
      "WorkWeeksGetManyResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkWeekResponse"
            }
          },
          "total": {
            "type": "number",
            "description": "Number of all resources",
            "example": 500
          },
          "count": {
            "type": "number",
            "description": "Number of received resources",
            "example": 50
          },
          "offset": {
            "type": "number",
            "description": "Offset amount of received resources",
            "example": 50
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkWeekRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data",
          "total",
          "count"
        ]
      },
      "WorkWeekGetOneResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkWeekResponse"
              }
            ]
          },
          "relations": {
            "description": "Resource relations",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkWeekRelationsResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WorkShiftRequest": {
        "type": "object",
        "properties": {
          "startHour": {
            "type": "number"
          },
          "startMinute": {
            "type": "number"
          },
          "endHour": {
            "type": "number"
          },
          "endMinute": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          }
        },
        "required": [
          "startHour",
          "startMinute",
          "endHour",
          "endMinute",
          "duration"
        ]
      },
      "WorkWeekDayRequest": {
        "type": "object",
        "properties": {
          "working": {
            "type": "boolean"
          },
          "duration": {
            "type": "number"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkShiftRequest"
            }
          }
        },
        "required": [
          "working",
          "duration",
          "shifts"
        ]
      },
      "CreateWorkWeekRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "officeId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "effectiveFrom": {
            "format": "date-time",
            "type": "string"
          },
          "effectiveTo": {
            "format": "date-time",
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "monday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "tuesday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "wednesday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "thursday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "friday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "saturday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          },
          "sunday": {
            "$ref": "#/components/schemas/WorkWeekDayRequest"
          }
        },
        "required": [
          "effectiveFrom",
          "timezone",
          "duration",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ]
      },
      "WorkWeekResponseMapped": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok",
            "description": "Status String"
          },
          "data": {
            "description": "Resource data",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkWeekResponse"
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateWorkWeekRequest": {
        "type": "object",
        "properties": {
          "effectiveTo": {
            "format": "date-time",
            "type": "string"
          }
        }
      }
    }
  }
}